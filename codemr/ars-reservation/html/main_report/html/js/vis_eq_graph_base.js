for(var network,allNodes,highlightActive=!1,arrayLength=nodesData.length,i=0;i<arrayLength;i++)nodesData[i].colorx=nodesData[i].color;var nodesDataset=new vis.DataSet(nodesData),edgesDataset=new vis.DataSet(edgesData);function redrawAll(){var e=document.getElementById("mynetwork"),l=codemr.metricchart("metricchart",classMetricSpec,classMetricValues,!0),o={nodes:nodesDataset,edges:edgesDataset},s=EQ_generateClassMetricMap(EQ_GET_DATA());(network=new vis.Network(e,o,{nodes:{borderWidth:0},edges:{arrowStrikethrough:!1,smooth:{type:"continuous",roundness:0}},physics:!1,interaction:{tooltipDelay:200,dragView:!1}})).on("selectNode",function(e){var o=e.nodes[0],a=nodesData[o].key;metricvalues=s[a],l.updateMetricValues(EQ_convertMetricValues(metricvalues),nodesData[o].title)}),network.on("zoom",function(e){document.getElementById("eventSpan").innerHTML="Zoom Scale: "+parseFloat(Math.round(100*e.scale)/100).toFixed(2)}),allNodes=nodesDataset.get({returnType:"Object"}),assignClusters(clusters),network.on("doubleClick",function(e){if(0<e.nodes.length){var o,a;highlightActive=!0;var l=e.nodes[0];for(var s in allNodes)allNodes[s].color="rgba(200,200,200,0.5)",void 0===allNodes[s].hiddenLabel&&(allNodes[s].hiddenLabel=allNodes[s].label,allNodes[s].label=void 0);var n=network.getConnectedNodes(l),t=[];for(o=1;o<2;o++)for(a=0;a<n.length;a++)t=t.concat(network.getConnectedNodes(n[a]));for(o=0;o<t.length;o++)allNodes[t[o]].color="rgba(150,150,150,0.75)",void 0!==allNodes[t[o]].hiddenLabel&&(allNodes[t[o]].label=allNodes[t[o]].hiddenLabel,allNodes[t[o]].hiddenLabel=void 0);for(o=0;o<n.length;o++)allNodes[n[o]].color=allNodes[n[o]].colorx,void 0!==allNodes[n[o]].hiddenLabel&&(allNodes[n[o]].label=allNodes[n[o]].hiddenLabel,allNodes[n[o]].hiddenLabel=void 0);allNodes[l].color=allNodes[l].colorx,void 0!==allNodes[l].hiddenLabel&&(allNodes[l].label=allNodes[l].hiddenLabel,allNodes[l].hiddenLabel=void 0)}else if(!0===highlightActive){for(var s in allNodes)allNodes[s].color=allNodes[s].colorx,void 0!==allNodes[s].hiddenLabel&&(allNodes[s].label=allNodes[s].hiddenLabel,allNodes[s].hiddenLabel=void 0);highlightActive=!1}var d=[];for(s in allNodes)allNodes.hasOwnProperty(s)&&d.push(allNodes[s]);nodesDataset.update(d)});var n=0,t=0,d=0,r=0;network.on("dragStart",function(e){var o=e.nodes[0];if(void 0===o)return d=e.pointer.canvas.x,void(r=e.pointer.canvas.y);d=e.pointer.canvas.x,r=e.pointer.canvas.y,n=allNodes[o].x-e.pointer.canvas.x,t=allNodes[o].y-e.pointer.canvas.y}),network.on("dragging",function(e){var o=e.nodes[0];if(void 0!==o){if(!e.event.srcEvent.ctrlKey)return d=e.pointer.canvas.x,r=e.pointer.canvas.y,allNodes[o].x=e.pointer.canvas.x+n,void(allNodes[o].y=e.pointer.canvas.y+t);var a=allNodes[o].cls;0<=a&&(moveCluster(clusters[a],clustersBounds[a],e.pointer.canvas.x-d,e.pointer.canvas.y-r),d=e.pointer.canvas.x,r=e.pointer.canvas.y)}}),network.on("dragEnd",function(e){var o=e.nodes[0];if(void 0===o)return 0<=(a=findBoudingCluster(clustersBounds,d,r))?void moveCluster(clusters[a],clustersBounds[a],e.pointer.canvas.x-d,e.pointer.canvas.y-r):void 0;if(e.event.srcEvent.ctrlKey){var a;if((a=allNodes[e.nodes[0]].cls)<0)return;moveCluster(clusters[a],clustersBounds[a],e.pointer.canvas.x-d,e.pointer.canvas.y-r)}else allNodes[o].x=e.pointer.canvas.x+n,allNodes[o].y=e.pointer.canvas.y+t}),network.on("beforeDrawing",function(e){calculateClusterBounds(clusters,clustersBounds);for(var o=clusters.length,a=0;a<o;a++)drawACluster(e,clustersBounds[a])})}redrawAll();

var clusterBoxMargin=25;function findBoudingCluster(r,t,n){for(var i=r.length,e=0;e<i;e++)if(t>=r[e].minX-clusterBoxMargin&&t<=r[e].maxX+clusterBoxMargin&&n>=r[e].minY-clusterBoxMargin&&n<=r[e].maxY+clusterBoxMargin)return e;return-1}function calculateClusterBounds(r,t){for(var n=r.length,i=0;i<n;i++)e(r[i],t[i]);function e(r,t){t.minX=Number.POSITIVE_INFINITY,t.minY=Number.POSITIVE_INFINITY,t.maxX=Number.NEGATIVE_INFINITY,t.maxY=Number.NEGATIVE_INFINITY;for(var n=r.length,i=0;i<n;i++){var e=network.getBoundingBox(r[i]);e.top<t.minY&&(t.minY=e.top),e.bottom>t.maxY&&(t.maxY=e.bottom),e.left<t.minX&&(t.minX=e.left),e.right>t.maxX&&(t.maxX=e.right)}}}function assignClusters(r){for(var t=r.length,n=0;n<t;n++)for(var i=0;i<r[n].length;i++)allNodes[r[n][i]].cls=n}function findCluster(r){return allNodes[r].cls}function moveCluster(r,t,n,e){t.minX=t.minX+n,t.minX=t.maxX+n,t.minX=t.minY+e,t.minX=t.maxY+e;var o=[];for(i=0;i<r.length;i++){var l=network.getPositions(r[i])[r[i]];allNodes[r[i]].x=l.x+n,allNodes[r[i]].y=l.y+e,o.push(allNodes[r[i]])}nodesDataset.update(o)}function drawACluster(r,t){r.strokeStyle="rgba(225, 225, 225, 150)",r.fillStyle="rgba(225, 225, 225, 150)";var n=2*clusterBoxMargin;!function(r,t,n,i,e,o,l,a){void 0===a&&(a=!0);void 0===o&&(o=5);i<2*o&&(o=i/2);e<2*o&&(o=e/2);if("number"==typeof o)o={tl:o,tr:o,br:o,bl:o};else{var u={tl:0,tr:0,br:0,bl:0};for(var m in u)o[m]=o[m]||u[m]}r.beginPath(),r.moveTo(t+o.tl,n),r.lineTo(t+i-o.tr,n),r.quadraticCurveTo(t+i,n,t+i,n+o.tr),r.lineTo(t+i,n+e-o.br),r.quadraticCurveTo(t+i,n+e,t+i-o.br,n+e),r.lineTo(t+o.bl,n+e),r.quadraticCurveTo(t,n+e,t,n+e-o.bl),r.lineTo(t,n+o.tl),r.quadraticCurveTo(t,n,t+o.tl,n),r.closePath(),l&&r.fill();a&&r.stroke()}(r,t.minX-clusterBoxMargin,t.minY-clusterBoxMargin,t.maxX-t.minX+n,t.maxY-t.minY+n,50,!0)}
